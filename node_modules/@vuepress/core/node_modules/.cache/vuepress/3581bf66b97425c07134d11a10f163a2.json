{"remainingRequest":"/Users/jack/Documents/GitHub/docs-info/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jack/Documents/GitHub/docs-info/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jack/Documents/GitHub/docs-info/src/products/tranches.md?vue&type=template&id=2485551d&","dependencies":[{"path":"/Users/jack/Documents/GitHub/docs-info/src/products/tranches.md","mtime":1623198576149},{"path":"/Users/jack/Documents/GitHub/docs-info/node_modules/cache-loader/dist/cjs.js","mtime":1619737538776},{"path":"/Users/jack/Documents/GitHub/docs-info/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619737540834},{"path":"/Users/jack/Documents/GitHub/docs-info/node_modules/cache-loader/dist/cjs.js","mtime":1619737538776},{"path":"/Users/jack/Documents/GitHub/docs-info/node_modules/vue-loader/lib/index.js","mtime":1619737540834},{"path":"/Users/jack/Documents/GitHub/docs-info/node_modules/@vuepress/markdown-loader/index.js","mtime":1619737538380}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}