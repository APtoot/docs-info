{"remainingRequest":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jaibhavnani/Desktop/Git/docs-info/src/contracts/README.md?vue&type=template&id=43330588&","dependencies":[{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/src/contracts/README.md","mtime":1619335060033},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/cache-loader/dist/cjs.js","mtime":1619077300192},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619077362344},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/cache-loader/dist/cjs.js","mtime":1619077300192},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/index.js","mtime":1619077362344},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/@vuepress/markdown-loader/index.js","mtime":1619077304147}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}