{"remainingRequest":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/jaibhavnani/Desktop/Git/docs-info/src/README.md?vue&type=template&id=83e02194&","dependencies":[{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/src/README.md","mtime":1619734552509},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/cache-loader/dist/cjs.js","mtime":1619077300192},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619077362344},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/cache-loader/dist/cjs.js","mtime":1619077300192},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/vue-loader/lib/index.js","mtime":1619077362344},{"path":"/Users/jaibhavnani/Desktop/Git/docs-info/node_modules/@vuepress/markdown-loader/index.js","mtime":1619077304147}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}